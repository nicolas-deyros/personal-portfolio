---
import { Image } from '@astrojs/image/components'
---

<div class="flex flex-col items-center justify-center w-[300px] md:w-full">
	<Image
		src={import('../assets/me.jpg')}
		width={367}
		height={412}
		alt="Nicolas Deyros avatar"
		format="webp"
		fit={'fill'}
	/>
	<div class="h-7 md:h-12 lg:h-20">
		<h1
			class="text-3xl md:text-5xl lg:text-7xl text-center leading-none"
			aria-label="Developer, Project Manager, Advertiser">
			<span
				class="txt-type font-semibold text-slate-700"
				data-wait="3000"
				data-words='["Developer", "Project Manager", "Advertiser"]'
				aria-hidden="true">
			</span>
		</h1>
	</div>
	<h3 class="txt my-2 text-xl md:text-2xl lg:text-3xl text-slate-500">
		a.k.a Problem solver
	</h3>
</div>
<script type="module" src="https://unpkg.com/rough-notation?module"></script>

<script>
	import { annotate } from 'https://unpkg.com/rough-notation?module'

	const e = document.querySelector('.txt')
	const annotation = annotate(e, {
		type: 'highlight',
		color: '#ffd54f',
		animationDuration: 3000,
	})
	annotation.show()

	const TypeWriter = function (txtElement, words, wait = 3000) {
		this.txtElement = txtElement
		this.words = words
		this.txt = ''
		this.wordIndex = 0
		this.wait = parseInt(wait, 10)
		this.type()
		this.isDeleting = false
	}

	TypeWriter.prototype.type = function () {
		const current = this.wordIndex % this.words.length
		const fullTxt = this.words[current]
		if (this.isDeleting) {
			this.txt = fullTxt.substring(0, this.txt.length - 1)
		} else {
			this.txt = fullTxt.substring(0, this.txt.length + 1)
		}
		this.txtElement.innerHTML = `<span class="txt">${this.txt}</span>`
		let typeSpeed = 300
		if (this.isDeleting) {
			typeSpeed /= 2
		}
		if (!this.isDeleting && this.txt === fullTxt) {
			typeSpeed = this.wait
			this.isDeleting = true
		} else if (this.isDeleting && this.txt === '') {
			this.isDeleting = false
			this.wordIndex++
			typeSpeed = 500
		}
		setTimeout(() => this.type(), typeSpeed)
	}

	document.addEventListener('DOMContentLoaded', init)

	function init() {
		const txtElement = document.querySelector('.txt-type')
		const words = JSON.parse(txtElement.getAttribute('data-words'))
		const wait = txtElement.getAttribute('data-wait')
		new TypeWriter(txtElement, words, wait)
	}
</script>
